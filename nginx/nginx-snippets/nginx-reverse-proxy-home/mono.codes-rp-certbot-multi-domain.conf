server {
    server_name qb.mono.codes www.qb.mono.codes;

    access_log /var/log/nginx/qb-access.log main;

    location / {
        proxy_pass http://192.168.1.3:8999;
        include /etc/nginx/conf.d/proxy_params;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mono.codes/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mono.codes/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    server_name nas.mono.codes www.nas.mono.codes;

    access_log /var/log/nginx/nas-access.log main;

    location / {
        proxy_pass http://192.168.1.3:5000;
        include /etc/nginx/conf.d/proxy_params;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mono.codes/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mono.codes/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host ~ ^[^.]+\.mono\.codes$) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name qb.mono.codes www.qb.mono.codes;
    return 404; # managed by Certbot


}

server {
    if ($host ~ ^[^.]+\.mono\.codes$) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name nas.mono.codes www.nas.mono.codes;
    return 404; # managed by Certbot


}